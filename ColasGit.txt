ğŸ“Œ ConfiguraÃ§Ã£o inicial

git config --global user.name "Seu Nome" â†’ define seu nome de usuÃ¡rio global.

git config --global user.email "seuemail@email.com" â†’ define seu e-mail global.

git config --list â†’ mostra as configuraÃ§Ãµes atuais.

ğŸ“Œ Fluxo bÃ¡sico

git init â†’ inicia um novo repositÃ³rio Git na pasta atual.

git clone <url> â†’ clona (baixa) um repositÃ³rio remoto para sua mÃ¡quina.

git status â†’ mostra o estado dos arquivos (modificados, novos, nÃ£o rastreados).

git add <arquivo> â†’ adiciona um arquivo especÃ­fico Ã  "staging area".

git add . â†’ adiciona todos os arquivos modificados Ã  "staging area".

git commit -m "mensagem" â†’ salva as alteraÃ§Ãµes no histÃ³rico com uma mensagem.

git log â†’ mostra o histÃ³rico de commits.

git diff â†’ mostra as diferenÃ§as entre arquivos modificados e o Ãºltimo commit.

ğŸ“Œ Trabalhando com branches

git branch â†’ lista os branches existentes.

git branch <nome> â†’ cria um novo branch.

git checkout <nome> â†’ muda para o branch indicado.

git checkout -b <nome> â†’ cria e muda para um branch novo.

git merge <branch> â†’ mescla um branch ao atual.

git branch -d <nome> â†’ deleta um branch.

ğŸ“Œ RepositÃ³rio remoto

git remote -v â†’ lista os repositÃ³rios remotos configurados.

git remote add origin <url> â†’ conecta o repositÃ³rio local ao remoto.

git push origin <branch> â†’ envia commits para o repositÃ³rio remoto.

git push -u origin <branch> â†’ envia e define como branch padrÃ£o.

git pull â†’ baixa as alteraÃ§Ãµes do repositÃ³rio remoto.

git fetch â†’ baixa referÃªncias do remoto sem mesclar.

ğŸ“Œ CorreÃ§Ãµes e reset

git reset --hard <hash> â†’ volta o repositÃ³rio para um commit especÃ­fico, descartando mudanÃ§as.

git reset --soft <hash> â†’ volta, mas mantÃ©m alteraÃ§Ãµes na "staging area".

git revert <hash> â†’ desfaz um commit criando um novo.

git stash â†’ guarda temporariamente mudanÃ§as nÃ£o commitadas.

git stash pop â†’ recupera as mudanÃ§as salvas.